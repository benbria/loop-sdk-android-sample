# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # Build job
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Lint & Spotless Check
        env:
          GITHUB_USER: ${{ secrets.USERNAME }}
          TOKEN: ${{ secrets.TOKEN }}
        run: |
          ./gradlew spotlessCheck
          ./gradlew lint

      - name: Run Unit Tests
        run: |
          ./gradlew test
        env:
          GITHUB_USER: ${{ secrets.USERNAME }}
          TOKEN: ${{ secrets.TOKEN }}

      - name: Build
        run: |
          ./gradlew build
          mv app/build/outputs/apk/release/app-release.apk loop-ref-app.apk
        env:
          GITHUB_USER: ${{ secrets.USERNAME }}
          TOKEN: ${{ secrets.TOKEN }}

      - name: Get version
          id: get_version
          run: echo "::set-output name=version::$(grep "versionName" app/build.gradle | awk '{print $2}' | tr -d \''"\')"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: loop-ref-app.apk
          asset_name: loop-ref-app.apk
          asset_content_type: application/zip
